---
import GitHub from "@/icons/Github.astro";
import LinkButton from "./LinkButton.astro";
import Link from "@/icons/Link.astro";
import ReadMore from "@/components/projects/ReadMore";
import { TAGS } from "./TagList.astro";
import { t } from "i18next";

// Datos de los proyectos
const PROJECTS = [
  {
    title: "Spring Boot 3 Microservices with Maven",
    description:
      t("projects.item_3_description_1.description") +
      " " +
      t("projects.item_3_description_1.microservices"),
    link: "https://spring.io/batch",
    github: "https://github.com/Nib1sin/S3_maven_microservices",
    image: "/images/MICROSERVICES_SPRING3.webp",
    tags: [TAGS.JAVA, TAGS.MAVEN, TAGS.SPRING, TAGS.YAML],
  },
  {
    title: "Spring Batch processing on the JVM",
    description: t("projects.item_1_description_1"),
    link: "https://spring.io/batch",
    github: "https://github.com/Nib1sin/ETL_Spring_1_J8",
    image: "/images/SPRING_BATCH.webp",
    tags: [
      TAGS.JAVA,
      TAGS.GRADLE,
      TAGS.ORACLE,
      TAGS.SQL,
      TAGS.GROOVY,
      TAGS.SPRING,
      TAGS.XML,
    ],
  },
  {
    title: "ChatPDF - Chat with your pdf file",
    description: t("projects.item_2_description_1"),
    link: "https://askyourpdf.com/",
    github: "https://github.com/Nib1sin/ChatPDF",
    image: "/images/CHAT_PDF.webp",
    tags: [
      TAGS.TYPESCRIPT,
      TAGS.SVELTE,
      TAGS.JAVASCRIPT,
      TAGS.OPENAI,
      TAGS._Astr,
      TAGS.TAILWIND,
    ],
  },
];
---

<div id="projects-carousel" class="relative w-full" data-carousel="static">
  <!-- Contenedor del carrusel -->
  <div class="relative h-96 overflow-hidden rounded-lg">
    {
      PROJECTS.map(
        ({ image, title, description, tags, link, github }, index) => (
          <div
            class={`${
              index === 0 ? "block" : "hidden"
            } duration-700 ease-in-out`}
            data-carousel-item={index === 0 ? "active" : ""}
          >
            <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
              <div class="w-full md:w-1/2">
                <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
                  <img
                    alt={title}
                    class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
                    loading="lazy"
                    src={image}
                  />
                </div>
              </div>

              <div class="w-full md:w-1/2 md:max-w-lg">
                <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100 duration-500 hover:scale-110 origin-left">
                  {title}
                </h3>
                <div class="flex flex-wrap mt-2">
                  <div class="mt-2 text-gray-700 dark:text-gray-400">
                    <ul class="flex flex-wrap mb-2 gap-x-2 gap-y-2">
                      {tags.map((tag) => (
                        <li>
                          <span
                            class={`hover:scale-110 transition duration-400 ease-in-out
                          flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 
                          dark:hover:text-white
                          border border-gray-700 dark:border-gray-500`}
                          >
                            <tag.icon class="size-4" />
                            {tag.name}
                          </span>
                        </li>
                      ))}
                    </ul>
                  </div>

                  <div class="mt-2 text-gray-600 hover:text-black dark:text-gray-400 dark:hover:text-gray-100">
                    {description}
                  </div>

                  <footer class="flex items-end justify-start mt-4 gap-x-4">
                    <div class="flex gap-4 mt-4">
                      {github && (
                        <LinkButton href={github}>
                          <GitHub class="size-6" />
                          Code
                        </LinkButton>
                      )}
                      {link && (
                        <LinkButton href={link}>
                          <Link class="size-4" />
                          Preview
                        </LinkButton>
                      )}
                    </div>
                  </footer>
                </div>
              </div>
            </article>
          </div>
        )
      )
    }
  </div>

  <!-- Indicadores del carrusel -->
  <div
    class="absolute z-30 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse bottom-5 left-1/2"
  >
    {
      PROJECTS.map((_, index) => (
        <button
          type="button"
          class="w-3 h-3 rounded-full bg-gray-300"
          aria-current={index === 0 ? "true" : "false"}
          aria-label={`Slide ${index + 1}`}
          data-carousel-slide-to={index}
        />
      ))
    }
  </div>

  <!-- Controles del carrusel -->
  <button
    type="button"
    class="absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-prev
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"
    >
      <svg
        class="w-4 h-4 text-black dark:text-gray-300 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 1 1 5l4 4"></path>
      </svg>
      <span class="sr-only">Previous</span>
    </span>
  </button>
  <button
    type="button"
    class="absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-next
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"
    >
      <svg
        class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 9 4-4-4-4"></path>
      </svg>
      <span class="sr-only">Next</span>
    </span>
  </button>
</div>

<script is:inline>
  let currentIndex = 0;
  function changeSlide(action) {
    const items = document.querySelectorAll("[data-carousel-item]");
    const totalItems = items.length;

    // Ocultar el slide actual
    items[currentIndex].classList.add("hidden");
    items[currentIndex].classList.remove("block");

    if (action === "next") currentIndex = (currentIndex + 1) % totalItems;
    else if (action === "prev")
      currentIndex = (currentIndex - 1 + totalItems) % totalItems;
    else currentIndex = action; // Ir a un slide específico

    // Mostrar el nuevo slide
    items[currentIndex].classList.remove("hidden");
    items[currentIndex].classList.add("block");
  }

  // Agregar listeners para los botones de navegación
  document.addEventListener("astro:page-load", () => {
    // Botón "Next"
    const nextButton = document.querySelector("[data-carousel-next]");
    if (nextButton)
      nextButton.addEventListener("click", () => changeSlide("next"));

    // Botón "Prev"
    const prevButton = document.querySelector("[data-carousel-prev]");
    if (prevButton)
      prevButton.addEventListener("click", () => changeSlide("prev"));

    // Indicadores del carrusel
    const indicators = document.querySelectorAll("[data-carousel-slide-to]");
    indicators.forEach((indicator, index) => {
      indicator.addEventListener("click", () => changeSlide(index));
    });
  });
</script>
